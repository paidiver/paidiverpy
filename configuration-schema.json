{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "general": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "step_name": {
          "type": "string"
        },
        "sample_data": {
          "type": "string"
        },
        "input_path": {
          "type": "string"
        },
        "metadata_path": {
          "type": "string"
        },
        "metadata_type": {
          "type": "string"
        },
        "image_type": {
          "type": "string"
        },
        "append_data_to_metadata": {
          "type": [
            "string",
            "boolean"
          ]
        },
        "output_path": {
          "type": "string"
        },
        "n_jobs": {
          "type": [
            "number",
            "null"
          ]
        },
        "rename": {
          "type": [
            "string",
            "null"
          ]
        },
        "sampling": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/sampling"
          }
        },
        "convert": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/convert"
          }
        }
      },
      "anyOf": [
        {
          "required": [
            "input_path",
            "output_path"
          ],
          "not": {
            "required": [
              "sample_data"
            ]
          }
        },
        {
          "required": [
            "sample_data"
          ]
        }
      ]
    },
    "steps": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "color": {
                "$ref": "#/definitions/color"
              }
            },
            "required": [
              "color"
            ]
          },
          {
            "type": "object",
            "properties": {
              "sampling": {
                "$ref": "#/definitions/sampling"
              }
            },
            "required": [
              "sampling"
            ]
          },
          {
            "type": "object",
            "properties": {
              "convert": {
                "$ref": "#/definitions/convert"
              }
            },
            "required": [
              "convert"
            ]
          },
          {
            "type": "object",
            "properties": {
              "position": {
                "$ref": "#/definitions/position"
              }
            },
            "required": [
              "position"
            ]
          }
        ]
      }
    }
  },
  "required": [
    "general"
  ],
  "definitions": {
    "position": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "step_name": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        },
        "test": {
          "type": "boolean"
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "mode"
      ],
      "if": {
        "properties": {
          "mode": {
            "const": "reproject"
          }
        }
      },
      "then": {
        "properties": {
          "params": {
            "$ref": "#/position_params/reproject"
          }
        }
      }
    },
    "convert": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "step_name": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            "bits",
            "to",
            "bayer_pattern",
            "normalize",
            "resize",
            "crop"
          ]
        },
        "test": {
          "type": "boolean"
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "mode"
      ],
      "if": {
        "properties": {
          "mode": {
            "const": "bits"
          }
        }
      },
      "then": {
        "properties": {
          "params": {
            "$ref": "#/convert_params/bit_params"
          }
        }
      },
      "else": {
        "if": {
          "properties": {
            "mode": {
              "const": "to"
            }
          }
        },
        "then": {
          "properties": {
            "params": {
              "$ref": "#/convert_params/to_params"
            }
          }
        },
        "else": {
          "if": {
            "properties": {
              "mode": {
                "const": "bayer_pattern"
              }
            }
          },
          "then": {
            "properties": {
              "params": {
                "$ref": "#/convert_params/bayer_pattern_params"
              }
            }
          },
          "else": {
            "if": {
              "properties": {
                "mode": {
                  "const": "normalize"
                }
              }
            },
            "then": {
              "properties": {
                "params": {
                  "$ref": "#/convert_params/normalize_params"
                }
              }
            },
            "else": {
              "if": {
                "properties": {
                  "mode": {
                    "const": "resize"
                  }
                }
              },
              "then": {
                "properties": {
                  "params": {
                    "$ref": "#/convert_params/resize_params"
                  }
                }
              },
              "else": {
                "if": {
                  "properties": {
                    "mode": {
                      "const": "crop"
                    }
                  }
                },
                "then": {
                  "properties": {
                    "params": {
                      "$ref": "#/convert_params/crop_params"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "color": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "step_name": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            "grayscale",
            "gaussian_blur",
            "edge_detection",
            "sharpen",
            "contrast",
            "illumination_correction",
            "deblur"
          ]
        },
        "test": {
          "type": "boolean"
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "mode"
      ],
      "if": {
        "properties": {
          "mode": {
            "const": "grayscale"
          }
        }
      },
      "then": {
        "properties": {
          "params": {
            "$ref": "#/color_params/grayscale"
          }
        }
      },
      "else": {
        "if": {
          "properties": {
            "mode": {
              "const": "gaussian_blur"
            }
          }
        },
        "then": {
          "properties": {
            "params": {
              "$ref": "#/color_params/gaussian_blur"
            }
          }
        },
        "else": {
          "if": {
            "properties": {
              "mode": {
                "const": "edge_detection"
              }
            }
          },
          "then": {
            "properties": {
              "params": {
                "$ref": "#/color_params/edge_detection"
              }
            }
          },
          "else": {
            "if": {
              "properties": {
                "mode": {
                  "const": "sharpen"
                }
              }
            },
            "then": {
              "properties": {
                "params": {
                  "$ref": "#/color_params/sharpen"
                }
              }
            },
            "else": {
              "if": {
                "properties": {
                  "mode": {
                    "const": "contrast"
                  }
                }
              },
              "then": {
                "properties": {
                  "params": {
                    "$ref": "#/color_params/contrast"
                  }
                }
              },
              "else": {
                "if": {
                  "properties": {
                    "mode": {
                      "const": "illumination_correction"
                    }
                  }
                },
                "then": {
                  "properties": {
                    "params": {
                      "$ref": "#/color_params/illumination_correction"
                    }
                  }
                },
                "else": {
                  "if": {
                    "properties": {
                      "mode": {
                        "const": "deblur"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "params": {
                        "$ref": "#/color_params/deblur"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "sampling": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "step_name": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            "datetime",
            "depth",
            "altitude",
            "pitch_roll",
            "overlapping",
            "fixed",
            "percent",
            "region",
            "obscure"
          ]
        },
        "test": {
          "type": "boolean"
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "mode"
      ],
      "if": {
        "properties": {
          "mode": {
            "const": "datetime"
          }
        }
      },
      "then": {
        "properties": {
          "params": {
            "$ref": "#/sampling_params/datetime_params"
          }
        }
      },
      "else": {
        "if": {
          "properties": {
            "mode": {
              "const": "depth"
            }
          }
        },
        "then": {
          "properties": {
            "params": {
              "$ref": "#/sampling_params/depth_params"
            }
          }
        },
        "else": {
          "if": {
            "properties": {
              "mode": {
                "const": "altitude"
              }
            }
          },
          "then": {
            "properties": {
              "params": {
                "$ref": "#/sampling_params/altitude_params"
              }
            }
          },
          "else": {
            "if": {
              "properties": {
                "mode": {
                  "const": "pitch_roll"
                }
              }
            },
            "then": {
              "properties": {
                "params": {
                  "$ref": "#/sampling_params/pitch_roll_params"
                }
              }
            },
            "else": {
              "if": {
                "properties": {
                  "mode": {
                    "const": "overlapping"
                  }
                }
              },
              "then": {
                "properties": {
                  "params": {
                    "$ref": "#/sampling_params/overlapping_params"
                  }
                }
              },
              "else": {
                "if": {
                  "properties": {
                    "mode": {
                      "const": "fixed"
                    }
                  }
                },
                "then": {
                  "properties": {
                    "params": {
                      "$ref": "#/sampling_params/fixed_params"
                    }
                  }
                },
                "else": {
                  "if": {
                    "properties": {
                      "mode": {
                        "const": "percent"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "params": {
                        "$ref": "#/sampling_params/percent_params"
                      }
                    }
                  },
                  "else": {
                    "if": {
                      "properties": {
                        "mode": {
                          "const": "region"
                        }
                      }
                    },
                    "then": {
                      "properties": {
                        "params": {
                          "$ref": "#/sampling_params/region_params"
                        }
                      }
                    },
                    "else": {
                      "if": {
                        "properties": {
                          "mode": {
                            "const": "obscure"
                          }
                        }
                      },
                      "then": {
                        "properties": {
                          "params": {
                            "$ref": "#/sampling_params/obscure_params"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "position_params": {
    "reproject": {
      "type": "object",
      "properties": {
        "placeholder": {
          "type": "string"
        }
      },
      "required": [
        "placeholder"
      ]
    }
  },
  "color_params": {
    "grayscale": {
      "type": "object",
      "properties": {
        "keep_alpha": {
          "type": "boolean"
        },
        "method": {
          "type": "string",
          "enum": [
            "opencv",
            "average",
            "luminosity",
            "desaturation"
          ]
        },
        "invert_colors": {
          "type": "boolean"
        }
      }
    },
    "deblur": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "enum": [
            "wiener"
          ]
        },
        "psf_type": {
          "type": "string",
          "enum": [
            "gaussian",
            "motion"
          ]
        },
        "sigma": {
          "type": "number"
        },
        "angle": {
          "type": "integer"
        }
      },
      "required": [
        "method"
      ]
    },
    "gaussian_blur": {
      "type": "object",
      "properties": {
        "sigma": {
          "type": "number"
        }
      },
      "required": [
        "sigma"
      ]
    },
    "edge_detection": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "enum": [
            "sobel",
            "Scharr",
            "Scharr-with-mean",
            "Canny"
          ]
        },
        "blur_radius": {
          "type": "number"
        },
        "threshold": {
          "type": "number"
        },
        "object_type": {
          "type": "string",
          "enum": [
            "Aggregate",
            "other_method"
          ]
        },
        "object_selection": {
          "type": "string",
          "enum": [
            "Full ROI",
            "other_method"
          ]
        },
        "estimate_sharpness": {
          "type": "boolean"
        },
        "deconv": {
          "type": "boolean"
        },
        "deconv_method": {
          "type": "string",
          "enum": [
            "um",
            "lr"
          ]
        },
        "deconv_iter": {
          "type": "integer"
        },
        "deconv_mask_weight": {
          "type": "number"
        },
        "small_float_val": {
          "type": "number"
        }
      },
      "required": [
        "method",
        "blur_radius",
        "threshold"
      ]
    },
    "sharpen": {
      "type": "object",
      "properties": {
        "alpha": {
          "type": "number"
        },
        "beta": {
          "type": "number"
        }
      },
      "required": [
        "alpha",
        "beta"
      ]
    },
    "contrast": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "enum": [
            "clahe",
            "gamma"
          ]
        },
        "kernel_size": {
          "type": [
            "integer",
            "null"
          ]
        },
        "clip_limit": {
          "type": "number"
        },
        "gamma_value": {
          "type": "number"
        }
      },
      "required": [
        "method",
        "clip_limit",
        "gamma_value"
      ]
    },
    "illumination_correction": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "enum": [
            "rolling",
            "other_method"
          ]
        },
        "radius": {
          "type": "integer"
        }
      },
      "required": [
        "method",
        "radius"
      ]
    }
  },
  "convert_params": {
    "bit_params": {
      "type": "object",
      "properties": {
        "output_bits": {
          "type": "integer",
          "enum": [
            8,
            16,
            32
          ]
        }
      },
      "required": [
        "output_bits"
      ]
    },
    "to_params": {
      "type": "object",
      "properties": {
        "to": {
          "type": "string",
          "enum": [
            "RGB",
            "gray"
          ]
        },
        "channel_selector": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "to"
      ]
    },
    "bayer_pattern_params": {
      "type": "object",
      "properties": {
        "bayer_pattern": {
          "type": "string",
          "enum": [
            "RG",
            "BG",
            "GR",
            "GB"
          ]
        }
      },
      "required": [
        "bayer_pattern"
      ]
    },
    "normalize_params": {
      "type": "object",
      "properties": {
        "min": {
          "type": "number"
        },
        "max": {
          "type": "number"
        }
      },
      "required": [
        "min",
        "max"
      ]
    },
    "resize_params": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "minimum": 1
        },
        "max": {
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "min",
        "max"
      ]
    },
    "crop_params": {
      "type": "object",
      "properties": {
        "x": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "minItems": 2,
          "maxItems": 2
        },
        "y": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "minItems": 2,
          "maxItems": 2
        }
      },
      "required": [
        "x",
        "y"
      ]
    }
  },
  "sampling_params": {
    "datetime_params": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string",
          "format": "date-time"
        },
        "max": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "depth_params": {
      "type": "object",
      "properties": {
        "by": {
          "type": "string",
          "enum": [
            "lower",
            "upper"
          ],
          "default": "lower"
        },
        "value": {
          "type": "number"
        }
      },
      "required": [
        "value"
      ]
    },
    "altitude_params": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number"
        }
      },
      "required": [
        "value"
      ]
    },
    "pitch_roll_params": {
      "type": "object",
      "properties": {
        "pitch": {
          "type": "number"
        },
        "roll": {
          "type": "number"
        }
      },
      "required": [
        "pitch",
        "roll"
      ]
    },
    "overlapping_params": {
      "type": "object",
      "properties": {
        "omega": {
          "type": "number",
          "minimum": 0
        },
        "theta": {
          "type": "number",
          "minimum": 0
        },
        "threshold": {
          "type": "number"
        },
        "camera_distance": {
          "type": "number",
          "default": 1.12
        }
      },
      "required": [
        "omega",
        "theta"
      ]
    },
    "fixed_params": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "default": 10
        }
      },
      "required": [
        "value"
      ]
    },
    "percent_params": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      },
      "required": [
        "value"
      ]
    },
    "region_params": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        },
        "limits": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "minItems": 4,
        "maxItems": 4
      },
      "anyOf": [
        {
          "required": [
            "file"
          ],
          "not": {
            "required": [
              "limits"
            ]
          }
        },
        {
          "required": [
            "limits"
          ]
        }
      ]
    },
    "obscure_params": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "minimum": 0,
          "maximum": 1
        },
        "max": {
          "type": "integer",
          "minimum": 0,
          "maximum": 1
        }
      },
      "required": [
        "min",
        "max"
      ]
    }
  }
}